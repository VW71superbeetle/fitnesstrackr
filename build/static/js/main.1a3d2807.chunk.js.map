{"version":3,"sources":["api/index.js","components/Header.jsx","components/NavBar.jsx","components/Routines.jsx","components/Activities.jsx","components/MyRoutines.jsx","components/UsersPage.jsx","components/CreateRoutine.jsx","components/CreateActivity.jsx","components/EditRoutine.jsx","App.jsx","index.js"],"names":["apiURL","storeCurrentUser","data","localStorage","setItem","JSON","stringify","user","username","id","token","clearCurrentUser","removeItem","GetCurrentUsername","parse","getItem","getCurrentToken","registerNewUser","password","a","URL","axios","post","console","error","loginExistingUser","GetAllActivities","get","CreateNewActivity","name","description","headers","Authorization","GetRoutinesByUser","userName","CreateNewRoutine","goal","isPublic","UpdateRoutine","patch","DeleteRoutine","routineID","delete","Header","setUser","NavBar","handleLogOutSubmit","e","preventDefault","window","location","assign","className","to","onSubmit","type","Routines","routines","map","creatorName","creatorId","activities","length","count","duration","Activities","setActivities","MyRoutines","myroutines","setMyRoutines","handleDeleteSubmit","myRoutines","alert","onClick","UsersPage","useState","form","setForm","handleInput","target","value","handleLoginSubmit","lusername","lpassword","res","handleRegisterSubmit","rpassword","rpassword2","rusername","onInput","autoComplete","CreateRoutine","handleCreateSubmit","document","getElementById","CreateRoutineWrapperNew","checked","htmlFor","required","onChange","CreateActivity","newActivity","EditRoutine","handleEditSubmit","App","setRoutines","useEffect","GetAllRoutines","then","catch","path","exact","ReactDOM","render"],"mappings":"+MAGMA,EAAS,gDAWR,SAASC,EAAiBC,GAC7BC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUJ,EAAKK,OACxDJ,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUJ,EAAKK,KAAKC,WACjEL,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUJ,EAAKK,KAAKE,KAC/DN,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUJ,EAAKQ,QAGtD,SAASC,IACZR,aAAaS,WAAW,eACxBT,aAAaS,WAAW,mBACxBT,aAAaS,WAAW,iBACxBT,aAAaS,WAAW,gBAarB,SAASC,IAEZ,OADiBR,KAAKS,MAAMX,aAAaY,QAAQ,oBAG9C,SAASC,IAEZ,OADcX,KAAKS,MAAMX,aAAaY,QAAQ,iBAkB3C,SAAeE,EAAtB,oC,4CAAO,WAAgCT,EAAUU,GAA1C,mBAAAC,EAAA,6DACGC,EADH,UACYpB,EADZ,qCAGsBqB,IAAMC,KAAN,UAAcF,GAAO,CACtCZ,WACAU,aALL,uBAOCjB,EAJOC,EAHR,EAGQA,MAHR,kBAQQA,GARR,kCAUCqB,QAAQC,MAAR,MAVD,2D,sBAcA,SAAeC,EAAtB,oC,4CAAO,WAAiCjB,EAAUU,GAA3C,mBAAAC,EAAA,6DACGC,EADH,UACYpB,EADZ,kCAGuBqB,IAAMC,KAAN,UAAcF,GAAO,CACvCZ,WACAU,aALL,uBAOCjB,EAJOC,EAHR,EAGQA,MAHR,kBAQQA,GARR,kCAUCqB,QAAQC,MAAR,MAVD,2D,sBA0BA,SAAeE,IAAtB,+B,4CAAO,gCAAAP,EAAA,6DACGC,EADH,UACYpB,EADZ,iCAGuBqB,IAAMM,IAAN,UAAaP,IAHpC,uBAGQlB,EAHR,EAGQA,KAHR,kBAIQA,GAJR,gCAMCqB,QAAQC,MAAR,MAND,0D,sBAUA,SAAeI,EAAtB,oC,4CAAO,WAAiCC,EAAMC,GAAvC,mBAAAX,EAAA,6DACGC,EADH,UACYpB,EADZ,iCAGsBqB,IAAMC,KAAN,UAAcF,GAAO,CAClCS,KAAKA,EACLC,YAAYA,GAEhB,CACIC,QAAS,CAAEC,cAAe,UAAYhB,OAR/C,uBAGQd,EAHR,EAGQA,KAHR,kBAWQA,GAXR,gCAaCqB,QAAQC,MAAR,MAbD,0D,kEAgCA,gCAAAL,EAAA,6DACGC,EADH,UACYpB,EADZ,+BAGsBqB,IAAMM,IAAN,UAAaP,IAHnC,uBAGQlB,EAHR,EAGQA,KAHR,kBAIQA,GAJR,gCAMCqB,QAAQC,MAAR,MAND,0D,sBAUA,SAAeS,EAAtB,kC,4CAAO,WAAiCC,GAAjC,mBAAAf,EAAA,6DACGC,EADH,UACYpB,EADZ,kBAC4BkC,EAD5B,+BAGsBb,IAAMM,IAAN,UAAaP,GAC9B,CACIW,QAAS,CAAEC,cAAe,UAAYhB,OAL/C,uBAGQd,EAHR,EAGQA,KAHR,kBAQQA,GARR,gCAUCqB,QAAQC,MAAR,MAVD,0D,sBAwBA,SAAeW,EAAtB,sC,4CAAO,WAAgCN,EAAMO,EAAMC,GAA5C,mBAAAlB,EAAA,6DACGC,EADH,UACYpB,EADZ,+BAGsBqB,IAAMC,KAAN,UAAcF,GAAO,CACtCS,KAAKA,EACLO,KAAKA,EACLC,SAASA,GACV,CACKN,QAAS,CAAEC,cAAe,UAAYhB,OAR/C,uBAGQd,EAHR,EAGQA,KAHR,kBAWQA,GAXR,gCAaCqB,QAAQC,MAAR,MAbD,0D,sBAiBA,SAAec,EAAtB,wC,4CAAO,WAA6B7B,EAAIoB,EAAMO,EAAMC,GAA7C,mBAAAlB,EAAA,6DACGC,EADH,UACYpB,EADZ,qBAC+BS,GAD/B,kBAGsBY,IAAMkB,MAAN,UAAenB,GAAO,CACvCX,KACAoB,KAAKA,EACLO,KAAKA,EACLC,SAASA,GACV,CACCN,QAAS,CAAEC,cAAe,UAAYhB,OAT3C,uBAGQd,EAHR,EAGQA,KAHR,kBAWQA,GAXR,gCAaCqB,QAAQC,MAAR,MAbD,0D,sBAiBA,SAAegB,EAAtB,kC,4CAAO,WAA6BC,GAA7B,mBAAAtB,EAAA,6DACGC,EADH,UACYpB,EADZ,qBAC+ByC,GAD/B,kBAGsBpB,IAAMqB,OAAN,UAAgBtB,GACjC,CACIW,QAAS,CAAEC,cAAe,UAAYhB,OAL/C,uBAGQd,EAHR,EAGQA,KAHR,kBAOQA,GAPR,gCASCqB,QAAQC,MAAR,MATD,0D,iCCpMQmB,EAbO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASrC,EAAW,EAAXA,KAE5B,OACM,yBAAQE,GAAG,QAAX,UACI,oDAGA,cAAC,EAAD,CAAQF,KAAMA,EAAMqC,QAASA,QCgC9BC,EAnCO,SAAC,GAAuB,IAArBtC,EAAoB,EAApBA,KAAMqC,EAAc,EAAdA,QAErBE,EAAkB,uCAAE,WAAOC,GAAP,SAAA5B,EAAA,6DACtB4B,EAAEC,iBADoB,kBAGArC,IAHA,cAIlBiC,EAAQ,MACRK,OAAOC,SAASC,OAAO,KALL,gDAOlB5B,QAAQC,MAAR,MAPkB,yDAAF,sDAUtB,OACM,qBAAKf,GAAG,SAAR,SACI,sBAAK2C,UAAU,OAAf,UACI,cAAC,IAAD,CAASC,GAAG,KAAKD,UAAU,SAA3B,kBACA,cAAC,IAAD,CAASC,GAAG,YAAYD,UAAU,SAAlC,qCACA,cAAC,IAAD,CAASC,GAAG,cAAcD,UAAU,SAApC,iCACE7C,EACM,qCACI,cAAC,IAAD,CAAS8C,GAAG,cAAcD,UAAU,SAApC,kCACA,2CAAcvC,IAAd,OACA,sBAAMJ,GAAK,YAAY6C,SAAUR,EAAjC,SACI,wBAAQM,UAAU,SAASG,KAAK,SAAhC,0BAKR,wBAAQH,UAAU,SAAlB,yBCUbI,EA1CS,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEtB,OACI,sBAAKL,UAAY,WAAjB,UACI,0CACCK,EAASC,KAAI,gBAAEjD,EAAF,EAAEA,GAAekD,GAAjB,EAAMC,UAAN,EAAiBD,aAAavB,EAA9B,EAA8BA,KAAgBP,GAA9C,EAAoCQ,SAApC,EAA8CR,MAAMgC,EAApD,EAAoDA,WAApD,OACV,sBAAKT,UAAU,mBAAf,UACI,2CAAcvB,KACd,6CAAgB8B,KAChB,wCAAgBvB,EAChB,uBACGyB,EAAWC,OAEV,wBAAOV,UAAU,sBAAjB,UACI,gCACI,+BACI,sCACA,6CACA,uCACA,+CAGR,gCACSS,EAAWH,KAAI,gBAAGjD,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAaiC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,SAAjC,OACZ,+BACI,6BAAKnC,IACL,6BAAKC,IACL,+BAAKiC,EAAL,OACA,6BAAKC,MAJAvD,WASrB,KA3B2BA,UCexCwD,EAnBW,SAAC,GAAiC,IAAhCJ,EAA+B,EAA/BA,WAAYK,EAAmB,EAAnBA,cAEpC,OACI,qCACI,sBAAKd,UAAY,aAAjB,UACI,4CACCS,EAAWH,KAAI,gBAAEjD,EAAF,EAAEA,GAAIoB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,YAAZ,OACZ,sBAAKsB,UAAU,oBAAf,UACI,4CAAevB,KACf,+CAAkBC,OAFkBrB,SAMhD,cAAC,EAAD,CAAgBoD,WAAYA,EAAYK,cAAiBA,Q,OCiDtDC,EA9DI,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cAIvBC,EAAkB,uCAAG,+BAAAnD,EAAA,6DAAQV,EAAR,EAAQA,GAAR,kBAEG+B,EAAc/B,GAFjB,8BAGUwB,EAAkBpB,KAH5B,OAGT0D,EAHS,OAIfF,EAAcE,GAJC,kDAMnBhD,QAAQC,MAAR,MACAgD,MAAM,yBAAD,MAPc,0DAAH,sDAWxB,OACI,mCACI,sBAAKpB,UAAY,WAAjB,UACI,6CACA,cAAC,EAAD,CAAegB,WAAYA,EAAaC,cAAeA,IACtDD,EAAWV,KAAI,kBAAEjD,EAAF,EAAEA,GAAekD,GAAjB,EAAMC,UAAN,EAAiBD,aAAavB,EAA9B,EAA8BA,KAA9B,IAAoCC,gBAApC,SAAmDR,EAAnD,EAAmDA,KAAMgC,EAAzD,EAAyDA,WAAzD,OACZ,sBAAKT,UAAU,mBAAf,UACI,2CAAcvB,KACd,6CAAgB8B,KAChB,wCAAgBvB,EAChB,uBACGyB,EAAWC,OAEV,wBAAOV,UAAU,sBAAjB,UACI,gCACI,+BACI,sCACA,6CACA,uCACA,+CAGR,gCACSS,EAAWH,KAAI,gBAAGjD,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAaiC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,SAAjC,OACZ,+BACI,6BAAKnC,IACL,6BAAKC,IACL,+BAAKiC,EAAL,OACA,6BAAKC,MAJAvD,WASrB,GAGR,cAAC,GAAD,GAAa4D,cAAeA,EAAe5D,GAAIA,GAA/C,8BAAkE4D,GAAlE,qBAAuFxC,GAAvF,qBAAmGO,GAAnG,yBAAqHC,GAArH,IACA,wBAA4BoC,QAAS,kBAAMH,EAAmB,CAAC7D,QAA/D,mCAAsBA,MA/BaA,Y,OCwD5CiE,EA9EU,SAAC,GAAuB,IAArB9B,EAAoB,EAApBA,QAASrC,EAAW,EAAXA,KACjC,EAAwBoE,mBAAS,CAACnE,SAAS,GAAIU,SAAS,KAAxD,mBAAO0D,EAAP,KAAaC,EAAb,KAEMC,EAAc,SAAC/B,GACjB8B,EAAQ,2BAAID,GAAL,kBAAY7B,EAAEgC,OAAOlD,KAAOkB,EAAEgC,OAAOC,UAG1CC,EAAiB,uCAAG,WAAOlC,GAAP,eAAA5B,EAAA,6DACtB4B,EAAEC,iBADoB,kBAGIvB,EAAkBmD,EAAKM,UAAWN,EAAKO,WAH3C,OAGRC,EAHQ,OAIdxC,EAAQwC,EAAI7E,MACZ0C,OAAOC,SAASC,OAAO,eALT,gDAOlB5B,QAAQC,MAAR,MAPkB,yDAAH,sDAWjB6D,EAAoB,uCAAG,WAAOtC,GAAP,eAAA5B,EAAA,yDACzB4B,EAAEC,iBADuB,SAGjB4B,EAAKU,YAAcV,EAAKW,WAHP,iCAICtE,EAAgB2D,EAAKY,UAAWZ,EAAKU,WAJtC,OAIXF,EAJW,OAKjBxC,EAAQwC,EAAI7E,MACZ0C,OAAOC,SAASC,OAAO,eANN,wBASjB5B,QAAQC,MAAM,wBATG,0DAYrBD,QAAQC,MAAR,MAZqB,0DAAH,sDA4B1B,OACI,qBAAKf,GAAK,WAAV,SACOF,EAuBE,GArBG,qCACI,gEACA,uBAAM+C,SAAU2B,EAAoB7B,UAAU,YAA9C,UACI,6CACI,uBAAOvB,KAAK,YAAYmD,MAAOJ,EAAKM,UAAWO,QAASX,IAC5D,6CACI,uBAAOjD,KAAK,YAAYmD,MAAOJ,EAAKO,UAAWM,QAASX,EAAavB,KAAK,WAAWmC,aAAe,qBACxG,wBAAQnC,KAAK,SAAb,sBAEJ,sDACA,uBAAMD,SAAU+B,EAAsBjC,UAAU,YAAhD,UACI,6CACI,uBAAOvB,KAAK,YAAYmD,MAAOJ,EAAKY,UAAWC,QAASX,IAC5D,6CACI,uBAAOjD,KAAK,YAAYmD,MAAOJ,EAAKU,UAAWG,QAASX,EAAavB,KAAK,WAAWmC,aAAe,iBACxG,sDACI,uBAAO7D,KAAK,aAAamD,MAAOJ,EAAKW,WAAYE,QAASX,EAAavB,KAAK,WAAWmC,aAAe,iBAC1G,wBAAQnC,KAAK,SAAb,sCCEboC,EArEO,SAAC,GAAuB,IAArBtB,EAAoB,EAApBA,cACxB,EAAwBM,mBAAS,CAChCtC,SAAU,OACVR,KAAM,GACNO,KAAM,KAHP,mBAAOwC,EAAP,KAAaC,EAAb,KAUSC,EAAc,SAAC/B,GACvB8B,EAAQ,2BAAKD,GAAN,kBAAa7B,EAAEgC,OAAOlD,KAAOkB,EAAEgC,OAAOC,UAGrCY,EAAkB,uCAAG,WAAO7C,GAAP,eAAA5B,EAAA,6DACvB4B,EAAEC,iBADqB,kBAGDb,EAAiByC,EAAK/C,KAAM+C,EAAKxC,KAAMwC,EAAKvC,UAH3C,8BAIMJ,EAAkBpB,KAJxB,OAIb0D,EAJa,OAKnBF,EAAcE,GAZxBM,EAAQ,CAAExC,SAAU,OAAQR,KAAM,GAAIO,KAAM,KAclCyD,SAASC,eAAeC,yBAAyBC,SAAU,EAPxC,kDASnBzE,QAAQC,MAAR,MATmB,0DAAH,sDAaxB,OACI,qCACI,uBAAO4B,UAAU,+BAA+B6C,QAAS,0BAAzD,4BACA,sBAAK7C,UAAU,2BAAf,UACI,uBAAO3C,GAAG,0BAA0B8C,KAAK,aACzC,qFACA,uBAAM0C,QAAS,0BAA0B7C,UAAY,OAAOE,SAAUsC,EAAtE,UAEQ,mCACIrC,KAAK,WACLyB,MAAM,OACNnD,KAAK,YAHT,OAIW,WAER,IACH,uBACJ,0CACI,uBACIqE,UAAQ,EACRrE,KAAK,OACLmD,MAAOJ,EAAK/C,KACZsE,SAAUrB,IACX,IACH,uBACJ,0CACI,uBACIoB,UAAQ,EACRrE,KAAK,OACLmD,MAAOJ,EAAKxC,KACZ+D,SAAUrB,IACX,IACP,uBACA,wBAAQvB,KAAK,SAASH,UAAU,UAAhC,sCCNLgD,EAtDQ,SAAC,GAAuB,IAArBlC,EAAoB,EAApBA,cACzB,EAAwBS,mBAAS,CAChC9C,KAAM,GACNC,YAAa,KAFd,mBAAO8C,EAAP,KAAaC,EAAb,KASMC,EAAc,SAAC/B,GACpB8B,EAAQ,2BAAKD,GAAN,kBAAa7B,EAAEgC,OAAOlD,KAAOkB,EAAEgC,OAAOC,UAGrCY,EAAkB,uCAAG,WAAO7C,GAAP,eAAA5B,EAAA,6DACvB4B,EAAEC,iBADqB,kBAGDpB,EAAkBgD,EAAK/C,KAAM+C,EAAK9C,aAHjC,8BAIOJ,IAJP,OAIb2E,EAJa,OAKnBnC,EAAcmC,GAZxBxB,EAAQ,CAAEhD,KAAM,GAAIC,YAAa,KAOJ,kDAQnBP,QAAQC,MAAR,MARmB,0DAAH,sDAYxB,OACI,sBAAKf,GAAG,qBAAR,UACI,6FACA,uBAAM6C,SAAUsC,EAAhB,UACR,0CACA,uBACCM,UAAQ,EACRrE,KAAK,OACLmD,MAAOJ,EAAK/C,KACZ4D,QAASX,IACP,IACH,uBACA,iDACA,uBACCoB,UAAQ,EACRrE,KAAK,cACLmD,MAAOJ,EAAK9C,YACZ2D,QAASX,IACP,IACH,uBACA,wBAAQvB,KAAK,SAAb,oCCwBW+C,EAtEK,SAAC,GAAkD,IAAD,EAA/CjC,EAA+C,EAA/CA,cAAgB5D,EAA+B,EAA/BA,GAAIoB,EAA2B,EAA3BA,KAAMO,EAAqB,EAArBA,KAChD,GADqE,EAAfC,SAC9BsC,mBAAS,CAChCtC,SAAU,OACVR,KAAMA,EACNO,KAAMA,EACA3B,GAAIA,KAJX,mBAAOmE,EAAP,KAAaC,EAAb,KAOMC,EAAc,SAAC/B,GACpB8B,EAAQ,2BAAKD,GAAN,kBAAa7B,EAAEgC,OAAOlD,KAAOkB,EAAEgC,OAAOC,UAGrCuB,EAAgB,uCAAG,WAAOxD,GAAP,eAAA5B,EAAA,6DACrB4B,EAAEC,iBADmB,kBAGKV,EAAesC,EAAKnE,GAAKmE,EAAK/C,KAAM+C,EAAKxC,KAAMwC,EAAKvC,UAHzD,8BAIYJ,EAAkBpB,KAJ9B,OAIP0D,EAJO,OAKbF,EAAcE,GACdsB,SAASC,eAAT,4BAA6CrF,IAAMuF,SAAU,EANhD,kDAQjBzE,QAAQC,MAAR,MARiB,0DAAH,sDAYtB,OACI,qCACI,uBAAO4B,UAAU,SAAS6C,QAAO,4BAAwBxF,GAAzD,0BACA,sBAAK2C,UAAU,QAAf,UACI,uBAAO3C,GAAE,4BAAuBA,GAAO8C,KAAK,aAC5C,uHACA,uBAAM0C,QAAO,4BAAwBxF,GAAO6C,SAAUiD,EAAtD,UAEQ,0BACIhD,KAAK,WACLyB,MAAM,OACNnD,KAAK,YAHT,qBAIW,UAJX,uCAMG,IACH,uBACJ,0CACI,uBACIqE,UAAQ,EACRrE,KAAK,OACLmD,MAAOJ,EAAK/C,KACZ4D,QAASX,IACV,IACH,uBACJ,0CACI,uBACIoB,UAAQ,EACRrE,KAAK,OACLmD,MAAOJ,EAAKxC,KACZqD,QAASX,IACV,IACP,uBACA,uBACIjD,KAAK,YACLmD,MAAOJ,EAAKnE,GACZ8C,KAAO,WAEX,wBAAQA,KAAK,SAAb,sCChDPiD,EAAM,WACf,MAAwB7B,mBVYXtE,KAAKS,MAAMX,aAAaY,QAAQ,iBUZ7C,mBAAOR,EAAP,KAAaqC,EAAb,KACA,EAAgC+B,mBAAS,IAAzC,mBAAOlB,EAAP,KAAiBgD,EAAjB,KACA,EAAoC9B,mBAAS,IAA7C,mBAAOP,EAAP,KAAmBC,EAAnB,KACA,EAAoCM,mBAAS,IAA7C,mBAAOd,EAAP,KAAmBK,EAAnB,KAsEA,OApEAwC,qBAAU,YVyHP,WAAP,gCUxHQC,GACKC,MAAK,SAACnD,GACHgD,EAAYhD,MAEfoD,OAAM,SAACrF,GACJ,KAAc,+BACf,IAEPE,IACKkF,MAAK,SAAC/C,GACHK,EAAcL,MAEjBgD,OAAM,SAACrF,GACJ,KAAc,iCACf,IAEPS,EAAkBpB,KACb+F,MAAK,SAAAxC,GACFC,EAAcD,MAEjByC,OAAM,SAACrF,GACJ,KAAc,8BACf,MASR,IAqCC,mCACI,cAAC,IAAD,UACI,sBAAKf,GAAK,MAAV,UACI,cAAC,EAAD,CAAQmC,QAASA,EAASrC,KAAMA,IAChC,cAAC,EAAD,CAAWqC,QAASA,EAASrC,KAAMA,IACnC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuG,KAAO,YAAd,SACI,cAAC,EAAD,CACIrD,SAAUA,MAElB,cAAC,IAAD,CAAOqD,KAAO,cAAd,SACI,cAAC,EAAD,CACI1C,WAAYA,EAAYC,cAAiBA,MAEjD,cAAC,IAAD,CAAOyC,KAAO,cAAd,SACI,cAAC,EAAD,CACIjD,WAAYA,EAAYK,cAAiBA,MAEjD,cAAC,IAAD,CAAO6C,OAAK,EAACD,KAAK,IAAlB,SACI,qBAAKrG,GAAG,gBAGZ,cAAC,IAAD,CAAU4C,GAAG,iBC5GrC2D,IAASC,OACL,cAAC,EAAD,IACApB,SAASC,eAAe,W","file":"static/js/main.1a3d2807.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// const apiURL = \"http://localhost:3002/api\";\nconst apiURL = \"https://guarded-sands-24074.herokuapp.com/api\";\n// const apiURL =\"https://fitnesstrac-kr.herokuapp.com/api\"\n\nconst getHeaders = () => {\n    return {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${getCurrentToken()}`\n    }\n}\n\n// Auth Functions\nexport function storeCurrentUser(data) {\n    localStorage.setItem('currentUser', JSON.stringify(data.user));\n    localStorage.setItem('currentUsername', JSON.stringify(data.user.username));\n    localStorage.setItem('currentUserID', JSON.stringify(data.user.id));\n    localStorage.setItem('currentToken', JSON.stringify(data.token));\n}\n\nexport function clearCurrentUser() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('currentUsername');\n    localStorage.removeItem('currentUserID');\n    localStorage.removeItem('currentToken');\n}\n\nexport function GetCurrentUser() {\n    const user = JSON.parse(localStorage.getItem('currentUser'));\n    return user;\n}\n\nexport function GetCurrentUserID() {\n    const userID = localStorage.getItem('currentUserID');\n    return userID;\n}\n\nexport function GetCurrentUsername() {\n    const userName = JSON.parse(localStorage.getItem('currentUsername'));\n    return userName;\n}\nexport function getCurrentToken() {\n    const token = JSON.parse(localStorage.getItem('currentToken'));\n    return token;\n}\n\n\n// Site Check\nexport async function healthCheck() {\n    const URL = `${apiURL}/health`\n    try {\n        const { data } =  await axios.get(URL);\n        return data;\n    } catch (error) {\n        console.error(error)\n    }\n};\n\n// User functions\n\nexport async function registerNewUser( username, password) {\n    const URL = `${apiURL}/users/register`\n    try {\n        const {data} = await axios.post(`${URL}`, {\n            username,\n            password\n        })\n        storeCurrentUser(data)\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n};\n\nexport async function loginExistingUser(username, password) {\n    const URL = `${apiURL}/users/login`\n    try {\n        const {data} =  await axios.post(`${URL}`, {\n            username,\n            password\n        })\n        storeCurrentUser(data)\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n};\n\nexport async function GetLoggedInUser() {\n    const URL = `${apiURL}/users/me`\n    try {\n        const {data} =  await axios.get(`${URL}`)\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n}\n\n// Activities\n\nexport async function GetAllActivities() {\n    const URL = `${apiURL}/activities`\n    try {\n        const {data} =  await axios.get(`${URL}`)\n        return data;\n    } catch (error) {\n        console.error(error)\n    }\n}\n\nexport async function CreateNewActivity(name, description) {\n    const URL = `${apiURL}/activities`\n    try {\n        const {data} = await axios.post(`${URL}`, {\n                name:name,\n                description:description\n            },\n            {\n                headers: { Authorization: 'Bearer ' + getCurrentToken() }\n            }\n        )\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n};\n\nexport async function UpdateActivity(activityID, name, description) {\n    const URL = `${apiURL}/activities/${activityID}`\n    try {\n        const {data} = await axios.patch(`${URL}`, {\n            name:name,\n            description:description\n        })\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n};\n\n// Routines\n\nexport async function GetAllRoutines() {\n    const URL = `${apiURL}/routines`\n    try {\n        const {data} = await axios.get(`${URL}`)\n        return data;\n    } catch (error) {\n        console.error(error)\n    }\n}\n\nexport async function GetRoutinesByUser(userName) {\n    const URL = `${apiURL}/users/${userName}/routines`\n    try {\n        const {data} = await axios.get(`${URL}`,\n            {\n                headers: { Authorization: 'Bearer ' + getCurrentToken() }\n            }\n        )\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n}\n\nexport async function GetRoutinesByActivity(ActivityID) {\n    const URL = `${apiURL}/activities/${ActivityID}/routines`\n    try {\n        const {data} = await axios.get(`${URL}`)\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n}\n\nexport async function CreateNewRoutine(name, goal, isPublic) {\n    const URL = `${apiURL}/routines`\n    try {\n        const {data} = await axios.post(`${URL}`, {\n            name:name,\n            goal:goal,\n            isPublic:isPublic\n        }, {\n                headers: { Authorization: 'Bearer ' + getCurrentToken() }\n            }\n        )\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n};\n\nexport async function UpdateRoutine(id, name, goal, isPublic) {\n    const URL = `${apiURL}/routines/${id}`\n    try {\n        const {data} = await axios.patch(`${URL}`, {\n            id ,\n            name:name,\n            goal:goal,\n            isPublic:isPublic\n        }, {\n            headers: { Authorization: 'Bearer ' + getCurrentToken() }\n        })\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n};\n\nexport async function DeleteRoutine(routineID) {\n    const URL = `${apiURL}/routines/${routineID}`\n    try {\n        const {data} = await axios.delete(`${URL}`,\n            {\n                headers: { Authorization: 'Bearer ' + getCurrentToken() }\n            })\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n};\n\n// Routine Activities\nexport async function CreateNewRoutineActivity(routineID, count, duration) {\n    const URL = `${apiURL}/routines/${routineID}/activities`\n    try {\n        const {data} = await axios.post(`${URL}`, {\n            count:count,\n            duration:duration\n        })\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n};\n\nexport async function UpdateRoutineActivity(routineActivityID, count, duration) {\n    const URL = `${apiURL}/routine_activities/${routineActivityID}`\n    try {\n        const {data} = await axios.patch(`${URL}`, {\n            count:count,\n            duration:duration\n        }, {\n            headers: { Authorization: 'Bearer ' + getCurrentToken() }\n        })\n        return data\n    } catch (error) {\n        \n    }\n};\n\nexport async function DeleteRoutineActivity(routineActivityID) {\n    const URL = `${apiURL}/routine_activities/${routineActivityID}`\n    try {\n        const {data} = await axios.delete(`${URL}`, {\n                count:count,\n                duration:duration\n            }, {\n                headers: { Authorization: 'Bearer ' + getCurrentToken() }\n            }\n        )\n        return data\n    } catch (error) {\n        console.error(error)\n    }\n};","import React, { useState } from \"react\";\nimport {NavBar} from './';\nexport const Header = ({ setUser, user }) => {\n\n      return (\n            <header id=\"title\">\n                <h1>\n                    YourFitnessTracker\n                </h1>\n                <NavBar user={user} setUser={setUser}/>   \n            </header>\n      );\n\n  };\n\nexport default Header;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { GetCurrentUsername, clearCurrentUser} from '../api';\nimport {UsersPageModal} from './'\n\n\nexport const NavBar = ({ user, setUser }) => {\n    \n    const handleLogOutSubmit= async (e) => {\n        e.preventDefault();\n        try {\n            const res = await clearCurrentUser()\n            setUser(null);\n            window.location.assign('/')\n        } catch (error) {\n            console.error(error)\n        }\n    }\n      return (\n            <div id=\"NavBar\" >\n                <div className=\"menu\">\n                    <NavLink to=\"/#\" className=\"button\">Home</NavLink>\n                    <NavLink to=\"/routines\" className=\"button\">Check out the Routines </NavLink>\n                    <NavLink to=\"/activities\" className=\"button\">Activities Browser </NavLink>\n                    { user ? (\n                            <>\n                                <NavLink to=\"/myroutines\" className=\"button\">Work on my Routines </NavLink> \n                                <h3>Welcome, {GetCurrentUsername()}!</h3>\n                                <form id = \"LogOutNav\" onSubmit={handleLogOutSubmit}>\n                                    <button className=\"button\" type=\"Submit\">Log Out</button>\n                                </form>\n                            </>\n                        ) \n                        : \n                            <button className=\"button\">Login</button>\n                    }\n                </div>\n            </div>\n      );\n  };\n\nexport default NavBar;\n\n\n","import React from 'react';\n\nexport const Routines = ({routines}) => {\n    \n    return (\n        <div className = \"routines\">\n            <h1>Routines</h1>\n            {routines.map(({id, creatorId ,creatorName, goal, isPublic ,name, activities }) => (\n                <div className=\"RoutineCard card\" key={id}> \n                    <h3>Routine: {name}</h3>\n                    <em>Created by {creatorName}</em>\n                    <em>Goal: </em>{goal}\n                    <br />\n                    {!!activities.length ? \n                        (\n                        <table className=\"routineActivityList\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Description</th>\n                                    <th>Count</th>\n                                    <th>Duration</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                    {activities.map(({ id, name, description, count, duration}) => (\n                                        <tr key={id} >\n                                            <td>{name}</td>\n                                            <td>{description}</td>\n                                            <td>{count}x</td>\n                                            <td>{duration}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                        </table>\n                        ) : \"\"\n                    }\n                </div>\n            ))}           \n        </div>   \n        )\n\n}\n\nexport default Routines;","\nimport React, {useState} from 'react';\nimport {CreateActivity} from './';\n\nexport const Activities = ({activities, setActivities}) => {\n    \n    return (\n        <>\n            <div className = \"activities\">\n                <h1>Activities</h1>\n                {activities.map(({id, name, description}) => (\n                    <div className=\"ActivityCard card\" key={id}> \n                        <h3>Activity: {name}</h3>\n                        <h4>Description: {description}</h4>\n                    </div>\n                ))}           \n            </div>\n            <CreateActivity activities={activities} setActivities = {setActivities}/>\n        </>\n        )\n\n}\n\nexport default Activities;","import React from 'react';\nimport {CreateRoutine, EditRoutine} from './index'\nimport {GetRoutinesByUser,GetCurrentUsername, DeleteRoutine} from '../api'\n\nconst MyRoutines = ({myroutines, setMyRoutines}) => {\n    // console.log(\"MYROUTINES>>>>>\", GetRoutinesByUser(GetCurrentUsername()))\n\n\n    const handleDeleteSubmit = async ({id}) => {\n        try {   \n                const res = await DeleteRoutine(id)\n                const myRoutines = await GetRoutinesByUser(GetCurrentUsername());\n                setMyRoutines(myRoutines)\n        } catch (error) {\n            console.error(error)\n            alert('Error Creating Routine', error)\n        }\n    }\n    \n    return (\n        <>\n            <div className = \"Routines\">\n                <h1>My Routines</h1>    \n                <CreateRoutine myroutines={myroutines}  setMyRoutines={setMyRoutines} />            \n                {myroutines.map(({id, creatorId ,creatorName, goal, isPublic=true ,name, activities }) => (\n                    <div className=\"RoutineCard card\" key={id}> \n                        <h3>Routine: {name}</h3>\n                        <em>Created by {creatorName}</em>\n                        <em>Goal: </em>{goal}\n                        <br />\n                        {!!activities.length ? \n                            (\n                            <table className=\"routineActivityList\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Description</th>\n                                        <th>Count</th>\n                                        <th>Duration</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                        {activities.map(({ id, name, description, count, duration}) => (\n                                            <tr key={id} >\n                                                <td>{name}</td>\n                                                <td>{description}</td>\n                                                <td>{count}x</td>\n                                                <td>{duration}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                            </table>\n                            ) : \"\"\n                        }\n                        {/* <button key={`edit${id}`} onClick={() => handleEditSubmit({id, name, goal, isPublic})} >Edit</button> */}\n                        <EditRoutine setMyRoutines={setMyRoutines} id={id} setMyRoutines={setMyRoutines} name={name} goal={goal} isPublic = {isPublic}/>\n                        <button key={`delete${id}`} onClick={() => handleDeleteSubmit({id})} >Delete</button>\n                    </div>\n                ))}           \n            </div>   \n\n        </>\n        )\n\n}\n\nexport default MyRoutines;","import React, {useState} from 'react';\nimport { GetCurrentUser, GetCurrentUsername, loginExistingUser, registerNewUser, clearCurrentUser } from '../api';\n\nexport const UsersPage = ({ setUser, user }) => {\n    const [form, setForm] = useState({username:'', password:''})\n\n    const handleInput = (e) => {\n        setForm({...form, [e.target.name]: e.target.value});\n    }\n\n    const handleLoginSubmit = async (e) => {\n        e.preventDefault();\n        try {\n                const res = await loginExistingUser(form.lusername, form.lpassword)\n                setUser(res.user)\n                window.location.assign('/myroutines')\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    \n    const handleRegisterSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (form.rpassword === form.rpassword2) {\n                const res = await registerNewUser(form.rusername, form.rpassword)\n                setUser(res.user)\n                window.location.assign('/myroutines')\n            }\n            else {\n                console.error(\"Passwords must match\")\n            }\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const handleLogOutSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            console.log(\"clearing user\")\n            const res = await clearCurrentUser()\n            setUser(null);\n            window.location.assign('/')\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return(\n        <div id = \"UserPage\">\n            { !user ? \n                (\n                    <>\n                        <h3>Login with an existing account</h3>\n                        <form onSubmit={handleLoginSubmit}  className=\"loginForm\">\n                            <label>UserName</label>\n                                <input name=\"lusername\" value={form.lusername} onInput={handleInput} />\n                            <label>Password</label>\n                                <input name=\"lpassword\" value={form.lpassword} onInput={handleInput} type=\"password\" autoComplete = \"current-password\"/>\n                            <button type=\"Submit\">Login</button>\n                        </form>\n                        <h3>Create a new account</h3>\n                        <form onSubmit={handleRegisterSubmit} className=\"loginForm\">\n                            <label>UserName</label>\n                                <input name=\"rusername\" value={form.rusername} onInput={handleInput} />\n                            <label>Password</label>\n                                <input name=\"rpassword\" value={form.rpassword} onInput={handleInput} type=\"password\" autoComplete = \"new-password\"/>\n                            <label>Re-Enter Password</label>\n                                <input name=\"rpassword2\" value={form.rpassword2} onInput={handleInput} type=\"password\" autoComplete = \"new-password\" />\n                            <button type=\"Submit\">Create New User</button>\n                        </form>\n                    </>\n                ) :\n                (\"\")\n            }\n\n        </div>\n    )\n}\n\nexport default UsersPage;","import React, { useState } from 'react';\nimport { GetRoutinesByUser, GetCurrentUsername, CreateNewRoutine} from '../api';\n\nconst CreateRoutine = ({ setMyRoutines }) => {\n\tconst [form, setForm] = useState({\n\t\tisPublic: 'true',\n\t\tname: '',\n\t\tgoal: '',\n\t});\n\n\tconst formReset = () => {\n\t\tsetForm({ isPublic: 'true', name: '', goal: '' });\n\t};\n\n    const handleInput = (e) => {\n\t\tsetForm({ ...form, [e.target.name]: e.target.value });\n\t};\n\n    const handleCreateSubmit = async (e) => {\n        e.preventDefault();\n        try {   \n            const res = await CreateNewRoutine(form.name, form.goal, form.isPublic)\n            const myRoutines = await GetRoutinesByUser(GetCurrentUsername());\n            setMyRoutines(myRoutines)\n            formReset();\n            document.getElementById(CreateRoutineWrapperNew).checked = false; \n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return (\n        <>\n            <label className=\"button CreateRoutine success\" htmlFor= \"CreateRoutineWrapperNew\" >New Routine...</label>\n            <div className='modal CreateRoutine card' >\n                <input id=\"CreateRoutineWrapperNew\" type='checkbox' />\n                <h4>Please enter the name and goal of your new routine.</h4>\n                <form htmlFor= \"CreateRoutineWrapperNew\" className = \"card\" onSubmit={handleCreateSubmit}>\n                    {/* <label type = \"hidden\">Make Public?</label> */}\n                        <input\n                            type=\"checkbox\"\n                            value='true'\n                            name=\"isPublic\"\n                            type = \"hidden\"\n                            // defaultChecked\n                        />{' '}\n                        <br></br>\n                    <label>Name:</label>\n                        <input\n                            required\n                            name=\"name\"\n                            value={form.name}\n                            onChange={handleInput}\n                        />{' '}\n                        <br></br>\n                    <label>Goal:</label>\n                        <input\n                            required\n                            name=\"goal\"\n                            value={form.goal}\n                            onChange={handleInput}\n                        />{' '}\n                    <br></br>\n                    <button type=\"submit\" className='success'>\n                        Create Routine\n                    </button>   \n                </form>\n            </div>\n        </>\n    )\n\n}\nexport default CreateRoutine;\n","import React, { useState } from 'react';\nimport { CreateNewActivity, GetAllActivities} from '../api';\n\nconst CreateActivity = ({ setActivities }) => {\n\tconst [form, setForm] = useState({\n\t\tname: '',\n\t\tdescription: '',\n\t});\n\n\tconst formReset = () => {\n\t\tsetForm({ name: '', description: '' });\n\t};\n\n\tconst handleInput = (e) => {\n\t\tsetForm({ ...form, [e.target.name]: e.target.value });\n\t};\n\n    const handleCreateSubmit = async (e) => {\n        e.preventDefault();\n        try {   \n            const res = await CreateNewActivity(form.name, form.description)\n            const newActivity = await GetAllActivities();\n            setActivities(newActivity)\n            formReset();\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return (\n        <div id=\"CreateActivityForm\">\n            <h3>Please enter the name and description of your new activity.</h3>\n            <form onSubmit={handleCreateSubmit}>\n\t\t\t\t<label>Name:</label>\n\t\t\t\t<input\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalue={form.name}\n\t\t\t\t\tonInput={handleInput}\n\t\t\t\t/>{' '}\n\t\t\t\t<br></br>\n\t\t\t\t<label>Description:</label>\n\t\t\t\t<input\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tvalue={form.description}\n\t\t\t\t\tonInput={handleInput}\n\t\t\t\t/>{' '}\n\t\t\t\t<br></br>\n\t\t\t\t<button type=\"submit\">\n\t\t\t\t\tCreate Activity\n\t\t\t\t</button>   \n            </form>\n        </div>\n    )\n\n}\nexport default CreateActivity;\n","import React, { useState } from 'react';\nimport { GetRoutinesByUser, GetCurrentUsername, UpdateRoutine} from '../api';\n\nconst EditRoutine = ({ setMyRoutines , id, name, goal, isPublic }) => {\n\tconst [form, setForm] = useState({\n\t\tisPublic: 'true',\n\t\tname: name,\n\t\tgoal: goal,\n        id: id\n\t});\n\n\tconst handleInput = (e) => {\n\t\tsetForm({ ...form, [e.target.name]: e.target.value });\n\t};\n\n    const handleEditSubmit = async (e) => {\n        e.preventDefault();\n        try {   \n                const res = await UpdateRoutine( form.id , form.name, form.goal, form.isPublic)\n                const myRoutines = await GetRoutinesByUser(GetCurrentUsername());\n                setMyRoutines(myRoutines)\n                document.getElementById(`EditRoutineWrapper${id}`).checked = false; \n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return (\n        <>\n            <label className=\"button\" htmlFor= {`EditRoutineWrapper${id}` }>Edit Routine</label>\n            <div className='modal' >\n                <input id={`EditRoutineWrapper${id}` } type='checkbox' />\n                <h4>If you would like to make a change, update the information and click \"Update Routine\"</h4>\n                <form htmlFor= {`EditRoutineWrapper${id}` } onSubmit={handleEditSubmit}>\n                    {/* <label type = \"hidden\">Make Public?</label> */}\n                        <input\n                            type=\"checkbox\"\n                            value='true'\n                            name=\"isPublic\"\n                            type = \"hidden\"\n                            defaultChecked\n                        />{' '}\n                        <br></br>\n                    <label>Name:</label>\n                        <input\n                            required\n                            name=\"name\"\n                            value={form.name}\n                            onInput={handleInput}\n                        />{' '}\n                        <br></br>\n                    <label>Goal:</label>\n                        <input\n                            required\n                            name=\"goal\"\n                            value={form.goal}\n                            onInput={handleInput}\n                        />{' '}\n                    <br></br>\n                    <input\n                        name=\"routineId\"\n                        value={form.id}\n                        type = \"hidden\"\n                    />\n                    <button type=\"submit\">\n                        Update Routine\n                    </button>   \n                </form>\n            </div>\n        </>\n    )\n\n}\nexport default EditRoutine;\n","import React, {useEffect, useState} from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect, BrowserRouter , NavLink} from 'react-router-dom'\nimport {\n    healthCheck, \n    GetAllRoutines, \n    GetRoutinesByUser, \n    GetRoutinesByActivity, \n    GetAllActivities, \n    GetCurrentUser, \n    GetCurrentUserID, \n    GetCurrentUsername, \n    GetLoggedInUser\n} from './api'\nimport {Routines, Header, NavBar, Activities, MyRoutines, UsersPage} from './components';\n\n\nexport const App = () => {\n    const [user, setUser] = useState(GetCurrentUser());\n    const [routines, setRoutines] = useState([]);\n    const [myroutines, setMyRoutines] = useState([]);\n    const [activities, setActivities] = useState([]);\n\n    useEffect(() => {\n        GetAllRoutines()\n            .then((routines) => {\n                setRoutines(routines)\n            })\n            .catch((error) => {\n                throw (error, \"Error Getting all Routines\");\n            }, []);\n\n        GetAllActivities()\n            .then((activities) => {\n                setActivities(activities)\n            })\n            .catch((error) => {\n                throw (error, \"Error Getting all Activities\");\n            }, []);\n\n        GetRoutinesByUser(GetCurrentUsername())\n            .then(myroutines => {\n                setMyRoutines(myroutines)\n            })\n            .catch((error) => {\n                throw (error, \"Error Getting my Routines\");\n            }, []);\n\n        // GetCurrentUser()\n        //     .then(user => {\n        //         setUser(user)\n        //     })\n        //     .catch((error) => {\n        //         throw (error, \"Error Setting User\");\n        //     }, []);\n    }, []);\n\n    // useEffect(() => {\n\n    //     if (!userID) {\n    //         setUserID()\n    //         setUserName()\n    //         setMyRoutines([]);\n    //         return;\n    //     }\n\n    //     GetCurrentUserID()\n    //         .then(userID => {\n    //             setUserID(userID)\n    //         })\n    //         .catch((error) => {\n    //             throw (error, \"Error Getting UserID\");\n    //         }, []);\n\n    //         GetRoutinesByUser(UserID)\n    //         .then(myroutines => {\n    //             setMyRoutines(myroutines)\n    //         })\n    //         .catch((error) => {\n    //             throw (error, \"Error Getting my Routines\");\n    //         }, []);\n\n    //     // GetLoggedInUser()\n    //     //     .then((user) => {\n    //     //         setUser(user)\n    //     //     })\n    //     //     .catch((error) => {\n    //     //         throw (error, \"Error Setting User\");\n    //     //     }, []);\n    // }, [userID]);\n\n    return (\n        <>\n            <Router>\n                <div id = \"app\">\n                    <Header setUser={setUser} user={user}/>         \n                    <UsersPage setUser={setUser} user={user}/>\n                    <Switch>\n                        <Route path = \"/routines\">\n                            <Routines \n                                routines={routines}/>\n                        </Route>\n                        <Route path = \"/myroutines\">\n                            <MyRoutines \n                                myroutines={myroutines} setMyRoutines = {setMyRoutines}/>\n                        </Route>\n                        <Route path = \"/activities\">\n                            <Activities \n                                activities={activities} setActivities = {setActivities}/>\n                        </Route>\n                        <Route exact path=\"/\">\n                            <div id=\"dashboard\">\n                            </div>\n                        </Route>\n                        <Redirect to=\"/\" />\n                    </Switch>\n                </div>\n            </Router>\n        </>\n    )\n};","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {App}  from './App'\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}